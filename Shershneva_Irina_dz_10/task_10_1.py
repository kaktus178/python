"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

| 31 22 |
| 37 43 |
| 51 86 |
| 3 5 32 |
| 2 4 6 |
| -1 64 -8 |
| 3 5 8 3 |
| 8 3 7 1 |
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для сложения двух объектов класса Matrix (двух матриц). Результатом
сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно. Первый элемент первой строки первой матрицы складываем с
первым элементом первой строки второй матрицы и пр.
"""

list_1 = [[31, 22], [37, 43], [51, 86]]
list_2 = [[3, 5, 32], [2, 4, 6], [-1, 64, -8]]
list_3 = [[3, 5, 8, 3], [8, 3, 7, 1]]


class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        return '\n'.join(map(str, self.matrix))

    def __add__(self, other):
        c = []
        for i in range(len(self.matrix)):
            c.append([])
            for j in range(len(self.matrix[0])):
                c[i].append(self.matrix[i][j] + other.matrix[i][j])
        return '\n'.join(map(str, c))


matrix_1 = Matrix(list_1)
matrix_2 = Matrix(list_2)
matrix_3 = Matrix(list_3)
print(f"Matrix 1 :\n{matrix_1}")
print(f"Matrix 2 :\n{matrix_2}")
print(f"Matrix 3 :\n{matrix_3}")
print(f"Sum of Matrix 1 and 2 :\n{matrix_1.__add__(matrix_2)}")
